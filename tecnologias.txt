Permision en android manifest
glide
firebase y solicitudes asyncronas
fragments
REcyclerView
FragmentManager: es la clase responsable de realizar acciones en los fragmentos de tu app, como 
agregarlos, quitarlos o reemplazarlos, así como agregarlos a la pila de actividades.

Todas las FragmentActivity y las subclases asociadas, como AppCompatActivity, tienen acceso a FragmentManager a través del método getSupportFragmentManager().

Cómo acceder a un fragmento

Los fragmentos también pueden alojar uno o más fragmentos secundarios. Dentro de un fragmento, puedes obtener una referencia a FragmentManager que administra los elementos secundarios del fragmento mediante getChildFragmentManager(). Si necesitas acceder a su host FragmentManager, puedes usar getParentFragmentManager().

Veamos algunos ejemplos que muestran las relaciones entre los fragmentos, sus hosts y las instancias del FragmentManager asociadas con cada uno.

 Bundle bundle= new Bundle();
            bundle.putSerializable("actividad",actividad);

            Fragment fragmento = new ActivityDetailFragment();

            // Al fragment le proporciono argumentos
            fragmento.setArguments(bundle);// add apila los fragmentos y eso hace que, cuando presione el boton atras se regresa al anterior fragment
            HomeActivity.manager.beginTransaction().add(R.id.fragment,fragmento).addToBackStack(null).commit();

Si usas onBackPressed() para controlar los eventos del botón Atrás, te recomendamos que utilices OnBackPressedCallback en su lugar